use crate::bitboard::Bitboard;
use crate::position::Square;

macro_rules! chessboard {
    ($line0:tt $line1:tt $line2:tt $line3:tt $line4:tt $line5:tt $line6:tt $line7:tt) => {
        ($line0 << 56)
            | ($line1 << 48)
            | ($line2 << 40)
            | ($line3 << 32)
            | ($line4 << 24)
            | ($line5 << 16)
            | ($line6 << 8)
            | ($line7 << 0)
    };
}

pub const KING_ATTACK_TABLE: KingAttackTable = KingAttackTable {
    lookup: [
        // [0] <-> Square::H1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000011
            0b_00000010)),
        // [1] <-> Square::G1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000111
            0b_00000101)),
        // [2] <-> Square::F1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00001110
            0b_00001010)),
        // [3] <-> Square::E1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00011100
            0b_00010100)),
        // [4] <-> Square::D1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00111000
            0b_00101000)),
        // [5] <-> Square::C1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_01110000
            0b_01010000)),
        // [6] <-> Square::B1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_11100000
            0b_10100000)),
        // [7] <-> Square::A1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_11000000
            0b_01000000)),
        // [8] <-> Square::H2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000011
            0b_00000010
            0b_00000011)),
        // [9] <-> Square::G2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000111
            0b_00000101
            0b_00000111)),
        // [10] <-> Square::F2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00001110
            0b_00001010
            0b_00001110)),
        // [11] <-> Square::E2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00011100
            0b_00010100
            0b_00011100)),
        // [12] <-> Square::D2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00111000
            0b_00101000
            0b_00111000)),
        // [13] <-> Square::C2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_01110000
            0b_01010000
            0b_01110000)),
        // [14] <-> Square::B2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_11100000
            0b_10100000
            0b_11100000)),
        // [15] <-> Square::A2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_11000000
            0b_01000000
            0b_11000000)),
        // [16] <-> Square::H3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000011
            0b_00000010
            0b_00000011
            0b_00000000)),
        // [17] <-> Square::G3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000111
            0b_00000101
            0b_00000111
            0b_00000000)),
        // [18] <-> Square::F3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00001110
            0b_00001010
            0b_00001110
            0b_00000000)),
        // [19] <-> Square::E3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00011100
            0b_00010100
            0b_00011100
            0b_00000000)),
        // [20] <-> Square::D3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00111000
            0b_00101000
            0b_00111000
            0b_00000000)),
        // [21] <-> Square::C3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_01110000
            0b_01010000
            0b_01110000
            0b_00000000)),
        // [22] <-> Square::B3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_11100000
            0b_10100000
            0b_11100000
            0b_00000000)),
        // [23] <-> Square::A3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_11000000
            0b_01000000
            0b_11000000
            0b_00000000)),
        // [24] <-> Square::H4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000011
            0b_00000010
            0b_00000011
            0b_00000000
            0b_00000000)),
        // [25] <-> Square::G4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000111
            0b_00000101
            0b_00000111
            0b_00000000
            0b_00000000)),
        // [26] <-> Square::F4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00001110
            0b_00001010
            0b_00001110
            0b_00000000
            0b_00000000)),
        // [27] <-> Square::E4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00011100
            0b_00010100
            0b_00011100
            0b_00000000
            0b_00000000)),
        // [28] <-> Square::D4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00111000
            0b_00101000
            0b_00111000
            0b_00000000
            0b_00000000)),
        // [29] <-> Square::C4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_01110000
            0b_01010000
            0b_01110000
            0b_00000000
            0b_00000000)),
        // [30] <-> Square::B4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_11100000
            0b_10100000
            0b_11100000
            0b_00000000
            0b_00000000)),
        // [31] <-> Square::A4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_11000000
            0b_01000000
            0b_11000000
            0b_00000000
            0b_00000000)),
        // [32] <-> Square::H5
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000011
            0b_00000010
            0b_00000011
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [33] <-> Square::G5
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000111
            0b_00000101
            0b_00000111
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [34] <-> Square::F5
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00001110
            0b_00001010
            0b_00001110
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [35] <-> Square::E5
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00011100
            0b_00010100
            0b_00011100
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [36] <-> Square::D5
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00111000
            0b_00101000
            0b_00111000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [37] <-> Square::C5
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_01110000
            0b_01010000
            0b_01110000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [38] <-> Square::B5
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_11100000
            0b_10100000
            0b_11100000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [39] <-> Square::A5
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_11000000
            0b_01000000
            0b_11000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [40] <-> Square::H6
        Bitboard(chessboard!(
            0b_00000000
            0b_00000011
            0b_00000010
            0b_00000011
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [41] <-> Square::G6
        Bitboard(chessboard!(
            0b_00000000
            0b_00000111
            0b_00000101
            0b_00000111
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [42] <-> Square::F6
        Bitboard(chessboard!(
            0b_00000000
            0b_00001110
            0b_00001010
            0b_00001110
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [43] <-> Square::E6
        Bitboard(chessboard!(
            0b_00000000
            0b_00011100
            0b_00010100
            0b_00011100
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [44] <-> Square::D6
        Bitboard(chessboard!(
            0b_00000000
            0b_00111000
            0b_00101000
            0b_00111000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [45] <-> Square::C6
        Bitboard(chessboard!(
            0b_00000000
            0b_01110000
            0b_01010000
            0b_01110000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [46] <-> Square::B6
        Bitboard(chessboard!(
            0b_00000000
            0b_11100000
            0b_10100000
            0b_11100000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [47] <-> Square::A6
        Bitboard(chessboard!(
            0b_00000000
            0b_11000000
            0b_01000000
            0b_11000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [48] <-> Square::H7
        Bitboard(chessboard!(
            0b_00000011
            0b_00000010
            0b_00000011
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [49] <-> Square::G7
        Bitboard(chessboard!(
            0b_00000111
            0b_00000101
            0b_00000111
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [50] <-> Square::F7
        Bitboard(chessboard!(
            0b_00001110
            0b_00001010
            0b_00001110
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [51] <-> Square::E7
        Bitboard(chessboard!(
            0b_00011100
            0b_00010100
            0b_00011100
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [52] <-> Square::D7
        Bitboard(chessboard!(
            0b_00111000
            0b_00101000
            0b_00111000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [53] <-> Square::C7
        Bitboard(chessboard!(
            0b_01110000
            0b_01010000
            0b_01110000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [54] <-> Square::B7
        Bitboard(chessboard!(
            0b_11100000
            0b_10100000
            0b_11100000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [55] <-> Square::A7
        Bitboard(chessboard!(
            0b_11000000
            0b_01000000
            0b_11000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [56] <-> Square::H8
        Bitboard(chessboard!(
            0b_00000010
            0b_00000011
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [57] <-> Square::G8
        Bitboard(chessboard!(
            0b_00000101
            0b_00000111
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [58] <-> Square::F8
        Bitboard(chessboard!(
            0b_00001010
            0b_00001110
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [59] <-> Square::E8
        Bitboard(chessboard!(
            0b_00010100
            0b_00011100
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [60] <-> Square::D8
        Bitboard(chessboard!(
            0b_00101000
            0b_00111000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [61] <-> Square::C8
        Bitboard(chessboard!(
            0b_01010000
            0b_01110000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [62] <-> Square::B8
        Bitboard(chessboard!(
            0b_10100000
            0b_11100000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [63] <-> Square::A8
        Bitboard(chessboard!(
            0b_01000000
            0b_11000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
    ],
};

pub struct KingAttackTable {
    lookup: [Bitboard; 64],
}

impl KingAttackTable {
    pub fn lookup(&self, square: Square) -> Bitboard {
        self.lookup[square as usize]
    }
}

pub const KNIGHT_ATTACK_TABLE: KnightAttackTable = KnightAttackTable {
    lookup: [
        // [0] <-> Square::H1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000010
            0b_00000100
            0b_00000000)),
        // [1] <-> Square::G1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000101
            0b_00001000
            0b_00000000)),
        // [2] <-> Square::F1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00001010
            0b_00010001
            0b_00000000)),
        // [3] <-> Square::E1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00010100
            0b_00100010
            0b_00000000)),
        // [4] <-> Square::D1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00101000
            0b_01000100
            0b_00000000)),
        // [5] <-> Square::C1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_01010000
            0b_10001000
            0b_00000000)),
        // [6] <-> Square::B1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_10100000
            0b_00010000
            0b_00000000)),
        // [7] <-> Square::A1
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_01000000
            0b_00100000
            0b_00000000)),
        // [8] <-> Square::H2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000010
            0b_00000100
            0b_00000000
            0b_00000100)),
        // [9] <-> Square::G2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000101
            0b_00001000
            0b_00000000
            0b_00001000)),
        // [10] <-> Square::F2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00001010
            0b_00010001
            0b_00000000
            0b_00010001)),
        // [11] <-> Square::E2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00010100
            0b_00100010
            0b_00000000
            0b_00100010)),
        // [12] <-> Square::D2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00101000
            0b_01000100
            0b_00000000
            0b_01000100)),
        // [13] <-> Square::C2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_01010000
            0b_10001000
            0b_00000000
            0b_10001000)),
        // [14] <-> Square::B2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00100000
            0b_00010000
            0b_00000000
            0b_00010000)),
        // [15] <-> Square::A2
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_01000000
            0b_00100000
            0b_00000000
            0b_00100000)),
        // [16] <-> Square::H3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000010
            0b_00000100
            0b_00000000
            0b_00000100
            0b_00000010)),
        // [17] <-> Square::G3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000101
            0b_00001000
            0b_00000000
            0b_00001000
            0b_00000101)),
        // [18] <-> Square::F3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00001010
            0b_00010001
            0b_00000000
            0b_00010001
            0b_00001010)),
        // [19] <-> Square::E3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00010100
            0b_00100010
            0b_00000000
            0b_00100010
            0b_00010100)),
        // [20] <-> Square::D3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00101000
            0b_01000100
            0b_00000000
            0b_01000100
            0b_00101000)),
        // [21] <-> Square::C3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_01010000
            0b_10001000
            0b_00000000
            0b_10001000
            0b_01010000)),
        // [22] <-> Square::B3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_10100000
            0b_00010000
            0b_00000000
            0b_00010000
            0b_10100000)),
        // [23] <-> Square::A3
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000000
            0b_01000000
            0b_00100000
            0b_00000000
            0b_00100000
            0b_01000000)),
        // [24] <-> Square::H4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000010
            0b_00000100
            0b_00000000
            0b_00000100
            0b_00000010
            0b_00000000)),
        // [25] <-> Square::G4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00000101
            0b_00001000
            0b_00000000
            0b_00001000
            0b_00000101
            0b_00000000)),
        // [26] <-> Square::F4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00001010
            0b_00010001
            0b_00000000
            0b_00010001
            0b_00001010
            0b_00000000)),
        // [27] <-> Square::E4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00010100
            0b_00100010
            0b_00000000
            0b_00100010
            0b_00010100
            0b_00000000)),
        // [28] <-> Square::D4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_00101000
            0b_01000100
            0b_00000000
            0b_01000100
            0b_00101000
            0b_00000000)),
        // [29] <-> Square::C4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_01010000
            0b_10001000
            0b_00000000
            0b_10001000
            0b_01010000
            0b_00000000)),
        // [30] <-> Square::B4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_10100000
            0b_00010000
            0b_00000000
            0b_00010000
            0b_10100000
            0b_00000000)),
        // [31] <-> Square::A4
        Bitboard(chessboard!(
            0b_00000000
            0b_00000000
            0b_01000000
            0b_00100000
            0b_00000000
            0b_00100000
            0b_01000000
            0b_00000000)),
        // [32] <-> Square::H5
        Bitboard(chessboard!(
            0b_00000000
            0b_00000010
            0b_00000100
            0b_00000000
            0b_00000100
            0b_00000010
            0b_00000000
            0b_00000000)),
        // [33] <-> Square::G5
        Bitboard(chessboard!(
            0b_00000000
            0b_00000101
            0b_00001000
            0b_00000000
            0b_00001000
            0b_00000101
            0b_00000000
            0b_00000000)),
        // [34] <-> Square::F5
        Bitboard(chessboard!(
            0b_00000000
            0b_00001010
            0b_00010001
            0b_00000000
            0b_00010001
            0b_00001010
            0b_00000000
            0b_00000000)),
        // [35] <-> Square::E5
        Bitboard(chessboard!(
            0b_00000000
            0b_00010100
            0b_00100010
            0b_00000000
            0b_00100010
            0b_00010100
            0b_00000000
            0b_00000000)),
        // [36] <-> Square::D5
        Bitboard(chessboard!(
            0b_00000000
            0b_00101000
            0b_01000100
            0b_00000000
            0b_01000100
            0b_00101000
            0b_00000000
            0b_00000000)),
        // [37] <-> Square::C5
        Bitboard(chessboard!(
            0b_00000000
            0b_01010000
            0b_10001000
            0b_00000000
            0b_10001000
            0b_01010000
            0b_00000000
            0b_00000000)),
        // [38] <-> Square::B5
        Bitboard(chessboard!(
            0b_00000000
            0b_10100000
            0b_00010000
            0b_00000000
            0b_00010000
            0b_10100000
            0b_00000000
            0b_00000000)),
        // [39] <-> Square::A5
        Bitboard(chessboard!(
            0b_00000000
            0b_01000000
            0b_00100000
            0b_00000000
            0b_00100000
            0b_01000000
            0b_00000000
            0b_00000000)),
        // [40] <-> Square::H6
        Bitboard(chessboard!(
            0b_00000010
            0b_00000100
            0b_00000000
            0b_00000100
            0b_00000010
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [41] <-> Square::G6
        Bitboard(chessboard!(
            0b_00000101
            0b_00001000
            0b_00000000
            0b_00001000
            0b_00000101
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [42] <-> Square::F6
        Bitboard(chessboard!(
            0b_00001010
            0b_00010001
            0b_00000000
            0b_00010001
            0b_00001010
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [43] <-> Square::E6
        Bitboard(chessboard!(
            0b_00010100
            0b_00100010
            0b_00000000
            0b_00100010
            0b_00010100
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [44] <-> Square::D6
        Bitboard(chessboard!(
            0b_00101000
            0b_01000100
            0b_00000000
            0b_01000100
            0b_00101000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [45] <-> Square::C6
        Bitboard(chessboard!(
            0b_01010000
            0b_10001000
            0b_00000000
            0b_10001000
            0b_01010000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [46] <-> Square::B6
        Bitboard(chessboard!(
            0b_10100000
            0b_00010000
            0b_00000000
            0b_00010000
            0b_10100000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [47] <-> Square::A6
        Bitboard(chessboard!(
            0b_01000000
            0b_00100000
            0b_00000000
            0b_00100000
            0b_01000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [48] <-> Square::H7
        Bitboard(chessboard!(
            0b_00000100
            0b_00000000
            0b_00000100
            0b_00000010
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [49] <-> Square::G7
        Bitboard(chessboard!(
            0b_00001000
            0b_00000000
            0b_00001000
            0b_00000101
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [50] <-> Square::F7
        Bitboard(chessboard!(
            0b_00010001
            0b_00000000
            0b_00010001
            0b_00001010
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [51] <-> Square::E7
        Bitboard(chessboard!(
            0b_00100010
            0b_00000000
            0b_00100010
            0b_00010100
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [52] <-> Square::D7
        Bitboard(chessboard!(
            0b_01000100
            0b_00000000
            0b_01000100
            0b_00101000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [53] <-> Square::C7
        Bitboard(chessboard!(
            0b_10001000
            0b_00000000
            0b_10001000
            0b_01010000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [54] <-> Square::B7
        Bitboard(chessboard!(
            0b_00010000
            0b_00000000
            0b_00010000
            0b_10100000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [55] <-> Square::A7
        Bitboard(chessboard!(
            0b_00100000
            0b_00000000
            0b_00100000
            0b_01000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [56] <-> Square::H8
        Bitboard(chessboard!(
            0b_00000000
            0b_00000100
            0b_00000010
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [57] <-> Square::G8
        Bitboard(chessboard!(
            0b_00000000
            0b_00001000
            0b_00000101
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [58] <-> Square::F8
        Bitboard(chessboard!(
            0b_00000000
            0b_00010001
            0b_00001010
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [59] <-> Square::E8
        Bitboard(chessboard!(
            0b_00000000
            0b_00100010
            0b_00010100
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [60] <-> Square::D8
        Bitboard(chessboard!(
            0b_00000000
            0b_01000100
            0b_00101000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [61] <-> Square::C8
        Bitboard(chessboard!(
            0b_00000000
            0b_10001000
            0b_01010000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [62] <-> Square::B8
        Bitboard(chessboard!(
            0b_00000000
            0b_00010000
            0b_00100000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
        // [63] <-> Square::A8
        Bitboard(chessboard!(
            0b_00000000
            0b_00100000
            0b_01000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000
            0b_00000000)),
    ],
};

pub struct KnightAttackTable {
    lookup: [Bitboard; 64],
}

impl KnightAttackTable {
    pub fn lookup(&self, square: Square) -> Bitboard {
        self.lookup[square as usize]
    }
}
